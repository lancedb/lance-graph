name: Python Tests
on:
  push:
    branches:
      - main
  pull_request:
    paths:
      - python/**
      - rust/lance-graph/**
      - .github/workflows/python-test.yml

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-C debuginfo=1"

jobs:
  test:
    runs-on: ubuntu-24.04
    timeout-minutes: 30
    strategy:
      matrix:
        python-version: ["3.11"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: python
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y protobuf-compiler
      - name: Install uv
        uses: astral-sh/setup-uv@v3
      - name: Create virtual environment and install dependencies
        working-directory: python
        run: |
          uv venv
          source .venv/bin/activate
          uv pip install maturin[patchelf]
          uv pip install -e .[tests]
      - name: Build Python extension
        working-directory: python
        run: |
          source .venv/bin/activate
          maturin develop
      - name: Run tests
        working-directory: python
        run: |
          source .venv/bin/activate
          pytest python/tests/ -v
      - name: Run doctests
        working-directory: python
        run: |
          source .venv/bin/activate
          if [ -f python/lance_graph/__init__.py ]; then
            python -m doctest python/lance_graph/__init__.py || echo "No doctests found"
          fi

  lint:
    runs-on: ubuntu-24.04
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install uv
        uses: astral-sh/setup-uv@v3
      - name: Install dependencies
        working-directory: python
        run: |
          uv venv
          source .venv/bin/activate
          uv pip install -e .[dev]
      - name: Run ruff format check
        working-directory: python
        run: |
          source .venv/bin/activate
          ruff format --check python/
      - name: Run ruff lint
        working-directory: python
        run: |
          source .venv/bin/activate
          ruff check python/
      - name: Run pyright type check
        working-directory: python
        run: |
          source .venv/bin/activate
          pyright